{"version":3,"sources":["styles/home.module.css","styles/main.module.css","components/Header.js","components/NewBillForm.js","components/AllBills.js","components/AllPeople.js","components/Home.js","components/PairedInput.js","components/ItemForm.js","components/EditBill.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","Navbar","dark","color","NavbarBrand","href","NewBillForm","props","useState","existingPeople","setExistingPeople","people","setPeople","newPerson","setNewPerson","personNameInvalidError","setPersonNameInvalidError","newBill","setNewBill","billNameInvalidError","setBillNameInvalidError","useEffect","peopleNew","existingPeopleNew","keys","person","push","name","isIncluded","Fragment","Form","onSubmit","event","trim","preventDefault","includes","newPeopleState","map","newExistingPeopleState","FormGroup","InputGroup","Input","type","placeholder","value","onChange","e","target","invalid","InputGroupAddon","addonType","Button","FormText","i","Badge","style","margin","fontSize","onClick","index","togglePersonState","key","involvedPeople","createNewBill","Bill","bill","meID","me","details","paid","owes","Col","xs","md","className","fontWeight","Date","date","toDateString","Row","marginRight","width","height","viewBox","fill","xmlns","fillRule","d","Object","values","size","to","id","AllBills","bills","setBills","setSelectedBill","Person","AllPeople","Home","peopleMap","setPeopleMap","isModalOpen","setIsModalOpen","activeTab","setActiveTab","toggleModal","toggleTab","tab","wrapper","navBar","borderBottom","Modal","isOpen","toggle","centered","ModalHeader","ModalBody","billName","peopleInvolved","billId","uniqid","peopleMapNew","Map","personId","has","get","set","console","log","toISOString","brief","items","obj","paidByMe","paidForMe","getPeopleAsObject","billsNew","TabContent","TabPane","tabId","Container","PairedInput","flag","updateValue","rem","overflowX","maxWidth","Number","toFixed","min","ItemForm","itemName","setItemName","itemAmount","setItemAmount","paidFor","setPaidFor","paidForRem","setPaidForRem","paidBy","setPaidBy","paidByRem","setPaidByRem","itemNameError","setItemNameError","itemAmountError","setItemAmountError","slice","totalPaid","reduce","acc","textAlign","noGutters","isNaN","peopleArray","paidForNew","paidByNew","EditBill","billID","useParams","isBillValid","setIsBillValid","table","Main","tempMap","appWrapper","basename","path","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.687810d5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"home_wrapper__2zyis\",\"navBar\":\"home_navBar__9Abb4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"main_wrapper__2I1e6\",\"appWrapper\":\"main_appWrapper__KMG1a\"};","import React from 'react'\nimport { Navbar, NavbarBrand } from 'reactstrap'\n\nfunction Header() {\n    return (\n        <div>\n            <Navbar dark color=\"dark\">\n                <NavbarBrand href=\"/\">BetterSplit</NavbarBrand>\n            </Navbar>\n        </div>\n    )\n}\n\nexport default Header\n","import React, { useState, useEffect } from 'react'\nimport { Form, FormGroup, InputGroup, Input, InputGroupAddon, Button, Badge, FormText } from 'reactstrap'\n\nfunction NewBillForm(props) {\n    const [existingPeople, setExistingPeople] = useState([]);\n    const [people, setPeople] = useState([]);\n    const [newPerson, setNewPerson] = useState('');\n    const [personNameInvalidError, setPersonNameInvalidError] = useState(\"\")\n    const [newBill, setNewBill] = useState('');\n    const [billNameInvalidError, setBillNameInvalidError] = useState(\"\");\n\n    function handleAddNewPerson(event) {\n        const name = newPerson.trim();\n        event.preventDefault();\n        if (name === \"\") setPersonNameInvalidError(\"Cannot be empty\")\n        else if (existingPeople.includes(name)) setPersonNameInvalidError(\"Already exists. Select from below\")\n        else {\n            setPersonNameInvalidError(\"\");\n\n            const newPeopleState = people.map(person => person);\n            newPeopleState.push({ name: name, isIncluded: true });\n            setPeople(newPeopleState);\n\n            const newExistingPeopleState = existingPeople.map(person => person);\n            newExistingPeopleState.push(name);\n            setExistingPeople(newExistingPeopleState)\n\n            setNewPerson(\"\");\n        }\n    }\n\n    function handleCreateNewBill(event) {\n        event.preventDefault();\n        const name = newBill.trim();\n        if (name === \"\") setBillNameInvalidError(\"Cannot be empty\")\n        else {\n            setBillNameInvalidError(\"\");\n            const involvedPeople = [];\n            for (const person in people) {\n                if (people[person].isIncluded) involvedPeople.push(people[person].name);\n            }\n            // console.log(involvedPeople);\n            props.createNewBill(newBill, involvedPeople);\n            setNewBill(\"\")\n        }\n    }\n\n\n    function togglePersonState(index) {\n        const peopleNew = people.map(person => person);\n        peopleNew[index].isIncluded = !peopleNew[index].isIncluded;\n        setPeople(peopleNew);\n    }\n\n    useEffect(() => {\n        const peopleNew = [];\n        const existingPeopleNew = [];\n        for (const person of props.people.keys()) {\n            existingPeopleNew.push(person);\n            peopleNew.push({ name: person, isIncluded: false });\n        }\n        setExistingPeople(existingPeopleNew);\n        setPeople(peopleNew);\n    }, [props.people]);\n\n    return (\n        <React.Fragment>\n            <Form onSubmit={handleAddNewPerson}>\n                <FormGroup>\n                    <InputGroup>\n                        <Input type=\"text\" placeholder=\"Person Name\"\n                            value={newPerson}\n                            onChange={(e) => { setNewPerson(e.target.value) }}\n                            invalid={personNameInvalidError !== \"\"}\n                        />\n                        <InputGroupAddon addonType=\"append\">\n                            <Button type=\"submit\" color=\"dark\">Add</Button>\n                        </InputGroupAddon>\n                    </InputGroup>\n                    <FormText color={\"danger\"}>{personNameInvalidError}</FormText>\n                </FormGroup>\n            </Form>\n            <hr />\n            <React.Fragment>\n                {\n                    people.map((person, i) => {\n                        return (\n                            <Badge style={{ margin: '2px', fontSize: 'large' }}\n                                color={person.isIncluded ? 'success' : 'secondary'}\n                                onClick={() => { togglePersonState(i) }}\n                                key={person.name}\n                            >{person.name}</Badge>\n                        )\n                    })\n                }\n            </React.Fragment>\n            <hr />\n            <Form onSubmit={handleCreateNewBill}>\n                <FormGroup>\n                    <InputGroup>\n                        <Input type=\"text\" placeholder=\"Bill Name/Purpose/Place\"\n                            value={newBill}\n                            onChange={(e) => { setNewBill(e.target.value) }}\n                            invalid={billNameInvalidError !== \"\"}\n                        />\n                        <InputGroupAddon addonType=\"append\">\n                            <Button type=\"submit\" color=\"primary\">Create</Button>\n                        </InputGroupAddon>\n                    </InputGroup>\n                    <FormText color={\"danger\"}>{billNameInvalidError}</FormText>\n                </FormGroup>\n            </Form>\n        </React.Fragment>\n    )\n}\n\nexport default NewBillForm\n","import React, { useEffect, useState } from 'react'\nimport { Row, Col, Badge, Button } from 'reactstrap'\nimport { Link } from 'react-router-dom';\n\nfunction Bill({bill, meID}) {\n    const getPeople = () => {\n        const people = Object.values(bill.details.people);\n        return people.map((person)=>{\n            return <Badge style={{fontSize: 'small', margin: '2px'}} color=\"info\" key={person.name}>{person.name}</Badge>\n        })\n    }\n    const me = bill.details.people[meID];\n    const paid = me ? me.paid : 0;\n    const owes = me ? me.owes : 0;\n    return (\n        <Col xs={12} md={6} className=\"my-1\">\n            <div className=\"border rounded\">\n                <div className=\"p-2 py-3 bg-light\">\n                    <div style={{fontSize: 'x-large', fontWeight: 'bold'}}>{bill.name}</div>\n                    <div style={{fontSize: 'small', color: 'var(--secondary)'}}>{new Date(bill.date).toDateString()}</div>\n                    <Row>\n                        <Col className=\"border-right\">\n                            <div style={{fontWeight: 'bold'}}>{paid}</div>\n                            <div style={{fontSize: 'x-small', color: 'var(--secondary)'}}>paid</div>\n                        </Col>\n                        <Col className=\"border-right\">\n                            <div style={{fontWeight: 'bold'}}>{owes}</div>\n                            <div style={{fontSize: 'x-small', color: 'var(--secondary)'}}>owes</div>\n                        </Col>\n                        <Col style={{color: paid-owes<0 ? 'var(--danger)' : 'var(--success)'}}>\n                            <div style={{fontWeight: 'bold'}}>{paid-owes}</div>\n                            <div style={{fontSize: 'x-small', color: 'var(--secondary)'}}>total</div>\n                        </Col>\n                    </Row>\n                </div>\n                <div className=\"p-2\">\n                    <div>\n                        <span style={{fontSize: 'x-large', marginRight: '5px'}}>\n                            <svg className=\"bi bi-people\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path fillRule=\"evenodd\" d=\"M15 14s1 0 1-1-1-4-5-4-5 3-5 4 1 1 1 1h8zm-7.995-.944v-.002.002zM7.022 13h7.956a.274.274 0 0 0 .014-.002l.008-.002c-.002-.264-.167-1.03-.76-1.72C13.688 10.629 12.718 10 11 10c-1.717 0-2.687.63-3.24 1.276-.593.69-.759 1.457-.76 1.72a1.05 1.05 0 0 0 .022.004zm7.973.056v-.002.002zM11 7a2 2 0 1 0 0-4 2 2 0 0 0 0 4zm3-2a3 3 0 1 1-6 0 3 3 0 0 1 6 0zM6.936 9.28a5.88 5.88 0 0 0-1.23-.247A7.35 7.35 0 0 0 5 9c-4 0-5 3-5 4 0 .667.333 1 1 1h4.216A2.238 2.238 0 0 1 5 13c0-1.01.377-2.042 1.09-2.904.243-.294.526-.569.846-.816zM4.92 10c-1.668.02-2.615.64-3.16 1.276C1.163 11.97 1 12.739 1 13h3c0-1.045.323-2.086.92-3zM1.5 5.5a3 3 0 1 1 6 0 3 3 0 0 1-6 0zm3-2a2 2 0 1 0 0 4 2 2 0 0 0 0-4z\"/>\n                            </svg>\n                        </span>\n                        {getPeople()}\n                    </div>\n                </div>\n                <div className=\"p-1 d-flex justify-content-end\">\n                    <Button className=\"m-1\" size=\"sm\" color=\"primary\">\n                        <svg className=\"bi bi-eye\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path fillRule=\"evenodd\" d=\"M16 8s-3-5.5-8-5.5S0 8 0 8s3 5.5 8 5.5S16 8 16 8zM1.173 8a13.134 13.134 0 0 0 1.66 2.043C4.12 11.332 5.88 12.5 8 12.5c2.12 0 3.879-1.168 5.168-2.457A13.134 13.134 0 0 0 14.828 8a13.133 13.133 0 0 0-1.66-2.043C11.879 4.668 10.119 3.5 8 3.5c-2.12 0-3.879 1.168-5.168 2.457A13.133 13.133 0 0 0 1.172 8z\"/>\n                            <path fillRule=\"evenodd\" d=\"M8 5.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5zM4.5 8a3.5 3.5 0 1 1 7 0 3.5 3.5 0 0 1-7 0z\"/>\n                        </svg>\n                        {\" \"}\n                        View\n                    </Button>\n                    <Link to={\"/\"+bill.id}>\n                    <Button className=\"m-1\" size=\"sm\" color=\"success\">\n                        <svg className=\"bi bi-pencil\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path fillRule=\"evenodd\" d=\"M11.293 1.293a1 1 0 0 1 1.414 0l2 2a1 1 0 0 1 0 1.414l-9 9a1 1 0 0 1-.39.242l-3 1a1 1 0 0 1-1.266-1.265l1-3a1 1 0 0 1 .242-.391l9-9zM12 2l2 2-9 9-3 1 1-3 9-9z\"/>\n                            <path fillRule=\"evenodd\" d=\"M12.146 6.354l-2.5-2.5.708-.708 2.5 2.5-.707.708zM3 10v.5a.5.5 0 0 0 .5.5H4v.5a.5.5 0 0 0 .5.5H5v.5a.5.5 0 0 0 .5.5H6v-1.5a.5.5 0 0 0-.5-.5H5v-.5a.5.5 0 0 0-.5-.5H3z\"/>\n                        </svg>\n                        {\" \"}\n                        Edit\n                    </Button>\n                    </Link>\n                </div>\n            </div>\n        </Col>\n    )\n}\n\n\n\nfunction AllBills(props) {\n\n    const [bills, setBills] = useState([]);\n\n    useEffect(()=>{\n        setBills(Object.values(props.bills));\n    }, [props.bills])\n\n    return (\n        <Row>\n            {bills.map((bill, i) => <Bill bill={bill} key={bill.name + i} meID={props.meID} setSelectedBill={props.setSelectedBill} />)}\n        </Row>\n    )\n}\n\nexport default AllBills\n","import React, { useEffect, useState } from 'react'\nimport { Row, Col, Badge } from 'reactstrap'\n\nfunction Person({person}) {\n    const paid = person.paid;\n    const owes = person.owes;\n    const getBills = () => {\n        const bills = person.bills;\n        return bills.map(({name}, i)=>{\n            return <Badge style={{fontSize: 'small', margin: '2px'}} color=\"info\" key={name+i}>{name}</Badge>\n        })\n    }\n    return (\n        <Col xs={12} md={6} className=\"my-1\">\n            <div className=\"border rounded\">\n                <div className=\"p-2 py-3 bg-light\">\n                    <div style={{fontSize: 'x-large', fontWeight: 'bold'}}>{person.name}</div>\n                    {/* <div style={{fontSize: 'small', color: 'var(--secondary)'}}>{new Date(bill.date).toDateString()}</div> */}\n                    <Row>\n                        <Col className=\"border-right\">\n                            <div style={{fontWeight: 'bold'}}>{paid}</div>\n                            <div style={{fontSize: 'x-small', color: 'var(--secondary)'}}>paid</div>\n                        </Col>\n                        <Col className=\"border-right\">\n                            <div style={{fontWeight: 'bold'}}>{owes}</div>\n                            <div style={{fontSize: 'x-small', color: 'var(--secondary)'}}>owes</div>\n                        </Col>\n                        <Col style={{color: owes-paid<0 ? 'var(--danger)' : 'var(--success)'}}>\n                            <div style={{fontWeight: 'bold'}}>{owes-paid}</div>\n                            <div style={{fontSize: 'x-small', color: 'var(--secondary)'}}>total</div>\n                        </Col>\n                    </Row>\n                </div>\n                <div className=\"p-2\">\n                    <div>\n                        <span style={{fontSize: 'x-large', marginRight: '5px'}}>\n                        <svg className=\"bi bi-receipt\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path fillRule=\"evenodd\" d=\"M1.92.506a.5.5 0 0 1 .434.14L3 1.293l.646-.647a.5.5 0 0 1 .708 0L5 1.293l.646-.647a.5.5 0 0 1 .708 0L7 1.293l.646-.647a.5.5 0 0 1 .708 0L9 1.293l.646-.647a.5.5 0 0 1 .708 0l.646.647.646-.647a.5.5 0 0 1 .708 0l.646.647.646-.647a.5.5 0 0 1 .801.13l.5 1A.5.5 0 0 1 15 2v12a.5.5 0 0 1-.053.224l-.5 1a.5.5 0 0 1-.8.13L13 14.707l-.646.647a.5.5 0 0 1-.708 0L11 14.707l-.646.647a.5.5 0 0 1-.708 0L9 14.707l-.646.647a.5.5 0 0 1-.708 0L7 14.707l-.646.647a.5.5 0 0 1-.708 0L5 14.707l-.646.647a.5.5 0 0 1-.708 0L3 14.707l-.646.647a.5.5 0 0 1-.801-.13l-.5-1A.5.5 0 0 1 1 14V2a.5.5 0 0 1 .053-.224l.5-1a.5.5 0 0 1 .367-.27zm.217 1.338L2 2.118v11.764l.137.274.51-.51a.5.5 0 0 1 .707 0l.646.647.646-.646a.5.5 0 0 1 .708 0l.646.646.646-.646a.5.5 0 0 1 .708 0l.646.646.646-.646a.5.5 0 0 1 .708 0l.646.646.646-.646a.5.5 0 0 1 .708 0l.646.646.646-.646a.5.5 0 0 1 .708 0l.509.509.137-.274V2.118l-.137-.274-.51.51a.5.5 0 0 1-.707 0L12 1.707l-.646.647a.5.5 0 0 1-.708 0L10 1.707l-.646.647a.5.5 0 0 1-.708 0L8 1.707l-.646.647a.5.5 0 0 1-.708 0L6 1.707l-.646.647a.5.5 0 0 1-.708 0L4 1.707l-.646.647a.5.5 0 0 1-.708 0l-.509-.51z\"/>\n                            <path fillRule=\"evenodd\" d=\"M3 4.5a.5.5 0 0 1 .5-.5h6a.5.5 0 1 1 0 1h-6a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h6a.5.5 0 1 1 0 1h-6a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h6a.5.5 0 1 1 0 1h-6a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1-.5-.5zm8-6a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5z\"/>\n                        </svg>\n                        </span>\n                        {getBills()}\n                    </div>\n                </div>\n            </div>\n        </Col>\n    )\n}\n\nfunction AllPeople(props) {\n\n    const [people, setPeople] = useState([]);\n\n    useEffect(()=>{\n        setPeople(Object.values(props.people));\n    }, [props.people])\n\n    return (\n        <Row>\n            {people.map(person => <Person person={person} key={person.name}/>)}\n        </Row>\n    )\n}\n\nexport default AllPeople\n","import React, { useState } from 'react'\nimport { Button, TabContent, TabPane, Badge, Container, Modal, ModalHeader, ModalBody} from 'reactstrap'\nimport {wrapper, navBar} from '../styles/home.module.css';\nimport NewBillForm from './NewBillForm';\nimport uniqid from 'uniqid'\nimport AllBills from './AllBills';\nimport AllPeople from './AllPeople';\n\nfunction Home({people, setPeople, bills, setBills, peopleMap, setPeopleMap}) {\n    // STATES RELATED TO UI\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [activeTab, setActiveTab] = useState(\"1\");\n\n    const toggleModal = () => {\n        setIsModalOpen(!isModalOpen);\n    }\n\n    const toggleTab = (tab) => {\n        if(activeTab !== tab) setActiveTab(tab);\n    }\n\n\n    const createNewBill = (billName, peopleInvolved) => {\n        // HIDE THE FORM\n        setIsModalOpen(false);\n        \n        const billId = uniqid();\n        // console.log(\"BillMap:\", billMap);\n        // const billMapNew = new Map(billMap);\n        // console.log(\"PeopleMap:\",peopleMap);\n        const peopleMapNew = new Map(peopleMap);\n        \n        // ADDING PEOPLE\n        const peopleNew = {...people};\n        for(const i in peopleInvolved) {\n            let personId;\n            if(peopleMapNew.has(peopleInvolved[i])){\n                personId = peopleMapNew.get(peopleInvolved[i]);\n                peopleNew[personId].bills.push({id: billId, name: billName})\n            }else{\n                personId = uniqid();\n                peopleNew[personId] = {\n                    name: peopleInvolved[i],\n                    paid: 0,\n                    owes: 0,\n                    bills: [{id: billId, name: billName}]\n                }\n                peopleMapNew.set(peopleInvolved[i], personId);\n            }\n        }\n        console.log(\"People\", peopleNew);\n        setPeopleMap(peopleMapNew);\n        setPeople(peopleNew);\n\n        // ADDING BILL\n        const getPeopleAsObject = () => {\n            let obj = {};\n            let personId;\n            for(const i in peopleInvolved){\n                personId = peopleMapNew.get(peopleInvolved[i])\n                obj = {\n                    ...obj,\n                    [personId]: {\n                        id: personId,\n                        name: peopleInvolved[i],\n                        paid: 0,\n                        owes: 0,\n                        items: {\n                            paidByMe: [],\n                            paidForMe: [],\n                        }\n                    }\n                }\n            }\n            return obj;\n        }\n\n        const bill = {\n            id: billId,\n            name: billName,\n            date: new Date().toISOString(),\n            brief: {\n                paid: 0,\n                owes: 0,\n            },\n            details: {\n                items: {},\n                people: getPeopleAsObject()\n            },\n        }\n        // billMapNew.set(billName, billId);\n        const billsNew = {...bills, [billId]: bill};\n        console.log(\"Bills\", billsNew);\n        // console.log(\"Bill Map:\", billMapNew)\n        // setBillMap(billMapNew);\n        setBills(billsNew);\n    }\n\n    return (\n        <div className={`${wrapper}`}>\n            <div>\n                <nav className={`${navBar}`}>\n                    <div className=\"navItem\" onClick={()=>{toggleTab(\"1\")}}\n                        style={activeTab === \"1\" ? {borderBottom: '2px solid var(--primary)', color: 'var(--primary)'}: {}}\n                    >Bills <Badge color={activeTab === \"1\" ? 'primary': 'secondary'}>{0}</Badge>\n                    </div>\n                    <div className=\"navItem\" onClick={()=>{toggleTab(\"2\")}}\n                        style={activeTab === \"2\" ? {borderBottom: '2px solid var(--primary)', color: 'var(--primary)'}: {}}\n                    >People <Badge color={activeTab === \"2\" ? 'primary': 'secondary'}>{peopleMap.size}</Badge>\n                    </div>\n                </nav>\n                <Modal isOpen={isModalOpen} toggle={toggleModal} centered>\n                    <ModalHeader toggle={toggleModal}>New Bill</ModalHeader>\n                    <ModalBody>\n                        <NewBillForm createNewBill={createNewBill} people={peopleMap} />\n                    </ModalBody>\n                </Modal>\n            </div>\n            <div>\n                <TabContent activeTab={activeTab}>\n                    <TabPane tabId={\"1\"}>\n                        <Container>\n                            <AllBills bills={bills} meID={peopleMap.get(\"me\")} />\n                        </Container>\n                    </TabPane>\n                    <TabPane tabId={\"2\"}>\n                        <Container>\n                            <AllPeople people={people}/>\n                        </Container>\n                    </TabPane>\n                </TabContent>\n            </div>\n            <div>\n                <Button color=\"primary\" onClick={toggleModal} className=\"btn-block\">Add Bill</Button>\n            </div>\n        </div>\n    )\n}\n\nexport default Home\n","import React from 'react'\nimport { InputGroup, InputGroupAddon, Input, Button, Col } from 'reactstrap';\n\nfunction PairedInput({flag, name, index, value, updateValue, rem}) {\n    return (\n            <Col xs={6} className=\"p-1\" >\n                <InputGroup  size={\"sm\"}>\n                    <InputGroupAddon addonType=\"append\">\n                        <Button>\n                            <div style={{overflowX: 'auto', maxWidth: '17vw'}}>{name}</div>\n                        </Button>\n                    </InputGroupAddon>\n                    <Input type=\"number\" placeholder={Number(rem).toFixed(2)}\n                        min={0}\n                        value={value}\n                        onChange={(e)=>{updateValue(index, e.target.value, flag)}}\n                    />\n                </InputGroup>\n            </Col>        \n    )\n}\n\nexport default PairedInput\n","import React, { useState, useEffect } from 'react'\nimport { Form, FormGroup, InputGroup, Input, Button, FormText, Row, Col, InputGroupAddon, InputGroupText, Modal, ModalHeader, ModalBody, Container } from 'reactstrap';\nimport {navBar} from '../styles/home.module.css'\nimport PairedInput from './PairedInput';\n\nfunction ItemForm({bill}) {\n    // STATES RELATED TO DATA\n    const [itemName, setItemName] = useState('');\n    const [itemAmount, setItemAmount] = useState('');\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [paidFor, setPaidFor] = useState([]);\n    const [paidForRem, setPaidForRem] = useState('')\n    const [paidBy, setPaidBy] = useState([]);\n    const [paidByRem, setPaidByRem] = useState('')\n\n    // STATES RELATED TO UI\n    const [itemNameError, setItemNameError] = useState('')\n    const [itemAmountError, setItemAmountError] = useState('')\n    \n    const handleItemNameSubmission = (event) => {\n        event.preventDefault();\n        if(itemName===\"\"){ \n            setItemNameError(\"Cannot be empty\");\n            return;\n        }\n        setItemNameError(\"\");\n\n        if(itemAmount===\"\"){\n            setItemAmountError(\"Cannot be empty\");\n            return;\n        }else if(isNaN(itemAmount)){\n            setItemAmountError(\"Must be a number\");\n            return;\n        }\n        setItemAmountError(\"\");\n        \n        const peopleArray = Object.values(bill.details.people);\n        \n        const paidForNew = peopleArray.map(({id, name}) => {\n            return {\n                id,\n                name,\n                value: \"\"\n            }\n        })\n        const paidByNew = peopleArray.map(({id, name}) => {\n            return {\n                id,\n                name,\n                value: \"\"\n            }\n        })\n        setPaidFor(paidForNew);\n        setPaidForRem(itemAmount);\n        setPaidBy(paidByNew);\n        setPaidByRem(itemAmount);\n\n        setIsModalOpen(true);\n    }\n\n    const updateValue = (i, value, flag) => {\n        let people;\n        if(flag) people = paidFor.slice();\n        else people = paidBy.slice();\n\n        people[i].value = value;\n        const totalPaid = people.reduce((acc, person) => acc + Number(person.value), 0)\n        console.log(\"Total paid:\",totalPaid)\n\n        if(flag){\n            setPaidForRem(Number(itemAmount)-totalPaid);\n            people = setPaidFor(people);\n        } \n        else{\n            setPaidByRem(Number(itemAmount)-totalPaid);\n            people = setPaidBy(people);\n        } \n\n    }\n    \n    return (\n        <div>\n            <Modal isOpen={isModalOpen} toggle={()=>{setIsModalOpen(!isModalOpen)}}>\n                <ModalHeader toggle={()=>{setIsModalOpen(!isModalOpen)}}>\n                    <div style={{fontWeight:'bold'}}>{itemAmount}</div>\n                    <div style={{fontSize: 'small'}}>{itemName}</div>\n                </ModalHeader>\n                <ModalBody>\n                    <Container>\n                        {/* PAID FOR */}\n                        <Row>\n                            <Col style={{textAlign: 'center', color: 'var(--primary)', borderBottom: '2px solid var(--primary)'}} xs={12}>Paid For</Col>\n                        </Row>\n                        <Row noGutters>\n                            {\n                                paidFor.map((person, i) => {\n                                    return <PairedInput \n                                        flag={true}\n                                        name={person.name} \n                                        index={i}\n                                        value={person.value}\n                                        updateValue={updateValue}\n                                        rem={paidForRem}\n                                        />\n                                })\n                            }\n                        </Row>\n\n                        {/* PAID BY */}\n                        <Row>\n                            <Col style={{textAlign: 'center', color: 'var(--primary)', borderBottom: '2px solid var(--primary)'}} xs={12}>Paid By</Col>\n                        </Row>\n                        <Row noGutters>\n                            {\n                                paidBy.map((person, i) => {\n                                    return <PairedInput \n                                        flag={false}\n                                        name={person.name} \n                                        index={i}\n                                        value={person.value}\n                                        updateValue={updateValue}\n                                        rem={paidByRem}\n                                        />\n                                })\n                            }\n                        </Row>\n\n                    </Container>\n                </ModalBody>\n            </Modal>\n\n            <Form onSubmit={handleItemNameSubmission}>\n                <Row>\n                <Col>\n                    <FormGroup>\n                        <InputGroup>\n                            <Input type=\"text\" placeholder=\"Item Name\"\n                                value={itemName}\n                                invalid={itemNameError !== \"\"}\n                                onChange={(e)=>{setItemName(e.target.value)}} />\n                            <Input type=\"number\" placeholder=\"Amount\"\n                                value={itemAmount}\n                                invalid={itemAmountError !== \"\"}\n                                onChange={(e)=>{setItemAmount(e.target.value)}} />\n                            <Button color=\"dark\" size=\"sm\" type=\"submit\" >Split</Button>\n                        </InputGroup>\n                        <Row>\n                            <Col xs={5}>\n                                <FormText color=\"danger\">{itemNameError}</FormText>\n                            </Col>\n                            <Col xs={5}>\n                                <FormText color=\"danger\">{itemAmountError}</FormText>                            \n                            </Col>\n                        </Row>\n                    </FormGroup>\n                </Col>\n                </Row>\n            </Form>\n        </div>\n    )\n}\n\nexport default ItemForm\n","import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport ItemForm from './ItemForm';\nimport { Container, Row, Col } from 'reactstrap';\n\nfunction EditBill({bills, setBills}) {\n    const {billID} = useParams();\n    const [bill, setBill] = useState({});\n    const [isBillValid, setIsBillValid] = useState(false);\n    useEffect(()=>{\n        if(bills[billID]){\n            setIsBillValid(true);\n            // console.log(bills[billID]);\n        }else{\n            console.table({\"Invalid Bill\": bills[billID]})\n        }\n    }, [bills, billID]);\n    return (\n        <div className=\"pt-2\">\n            <Container>\n                {/* <Row>\n                    <Col xs={12}><h5>{isBillValid ? bill.name : \"Alpha\" }</h5></Col>\n                </Row> */}\n                <Row>\n                    <Col>\n                        {isBillValid ? <ItemForm bill={bills[billID]} /> : <h3>Loading...</h3>}\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default EditBill\n","import React, {useState} from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport uniqid from 'uniqid';\nimport {wrapper, appWrapper} from '../styles/main.module.css'\nimport Header from './Header'\nimport Home from './Home'\nimport EditBill from './EditBill';\n\nfunction Main() {\n    // STATES RELATED TO DATA\n    const meID = uniqid();\n    const tempMap = new Map();\n    tempMap.set(\"me\", meID);\n    const [people, setPeople] = useState({\n        [meID]: {\n            name: \"me\",\n            paid: 0,\n            owes: 0,\n            bills: []\n        }\n    });\n    const [bills, setBills] = useState({});\n    const [peopleMap, setPeopleMap] = useState(new Map(tempMap));\n\n    return (\n        <div className={`${wrapper}`}>\n            <Header />\n            <div className={`${appWrapper}`}>\n                {/* ROUTES */}\n                <Router basename=\"/bettersplit\">\n                    <Switch>\n                        <Route path=\"/:billID\">\n                            <EditBill bills={bills} setBills={setBills} />\n                        </Route>\n                        <Route path=\"/\" >\n                            <Home people={people} \n                                setPeople={setPeople}\n                                bills={bills}\n                                setBills={setBills}\n                                peopleMap={peopleMap}\n                                setPeopleMap={setPeopleMap}\n                            />\n                        </Route>\n                    </Switch>\n                </Router>\n            </div>\n        </div>\n    )\n}\n\nexport default Main\n","import React from 'react';\nimport Main from './components/Main';\nimport './App.css'\n\nconst App = () => (\n  <div>\n    <Main />\n  </div>\n);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}